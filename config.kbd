;; Advanced Kanata Configuration with Home Row Mods
;;
;; FUNCTIONALITY OVERVIEW:
;; ----------------------
;; 
;; HOME ROW MODIFIERS:
;; - Left hand:  A(shift) S(ctrl) D(option) F(vim-nav) G(command)
;; - Right hand: J(command) K(option) L(ctrl) ;(shift)
;; - Smart same-hand early activation prevents accidental mod triggers
;; - Auto-disables during rapid typing for smooth experience
;;
;; NAVIGATION LAYERS:
;; - F (hold): Basic vim navigation with hjkl = arrow keys (←↓↑→) + wb word nav
;; - Spacebar (hold): Same basic vim navigation as F-hold
;;   * h -> line start (Cmd+←)
;;   * j -> page down 
;;   * k -> page up
;;   * l -> line end (Cmd+→)
;;   * w -> word right (Option+→)
;;   * b -> word left (Option+←)  
;;   * u -> HomeRow App trigger
;; 
;; SPECIAL FEATURES:
;; - ESC (tap): Normal escape | ESC (hold): Caps-word mode for 2 seconds
;; - Automatic mod disabling during fast typing sessions
;; - Configurable timing for different fingers (pinky gets more time)
;; - Concurrent tap-hold support for advanced chord combinations

(defcfg
  process-unmapped-keys yes
  concurrent-tap-hold yes
  ;; Note: To enable TCP server for LearnKeys, you may need to:
  ;; 1. Check your kanata version for the correct TCP server syntax
  ;; 2. Add something like: tcp-server-address 127.0.0.1:5829
  ;; 3. Or start kanata with --tcp-server flag
  ;; 4. Refer to kanata documentation for your version
)

(defsrc
  q w e r t y u i o p a s d f g h j k l ; z x c v b n m spc left down up right esc
)

(defvar
  ;; Note: consider using different time values for your different fingers.
  ;; For example, your pinkies might be slower to release keys and index
  ;; fingers faster.
  tap-time 200
  hold-time 150

  a-tap-time 300  ;; little more time pinky needs to tap a key
  a-hold-time 200 ;; little more time pinky needs to hold a key

  ;; Chord timing
  chord-timeout 250

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
)

(deflayer base
  q w e r t y u i o p @a @s @d @f @g h @j @k @l @; z x c v b n m @spc _ _ _ _ @esc
)

(deflayer nomods
  q w e r t y u i o p a s d f g h j k l ; z x c v b n m spc _ _ _ _ esc
)

(deflayer f-nav
  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @fnav_h @fnav_j @fnav_k @fnav_l _ _ _ _ _ @fnav_b _ _ _ left down up right _
)

(deflayer navfast
  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @fast_h @fast_j @fast_k @fast_l _ _ _ _ _ @fast_b _ _ _ @fast_h @fast_j @fast_k @fast_l _
)

(deffakekeys
  to-base (layer-switch base)
)

(defchordsv2
  (d f) (layer-while-held navfast) $chord-timeout all-released ()
)

(defalias
  ;; Left hand modifiers
  shift lsft
  control lctl
  option lalt
  command lmet

  ;; Right hand modifiers
  rshift rsft
  rcontrol rctl
  roption ralt
  rcommand rmet

  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )

  ;; Escape key with caps word toggle functionality
  esc (tap-hold-release-keys 150 200 esc (caps-word 2000) ())

  ;; Spacebar: tap = space, hold = vim navigation layer
  spc (tap-hold-release-keys $tap-time $hold-time (multi spc @tap) (layer-toggle f-nav) ())

  ;; Left hand home row mods
  a (tap-hold-release-keys $a-tap-time $a-hold-time (multi a @tap) @shift $left-hand-keys)
  s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) @control $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) @option $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) (layer-toggle f-nav) $left-hand-keys)
  g (tap-hold-release-keys $tap-time $hold-time (multi g @tap) @command $left-hand-keys)

  ;; Right hand home row mods  
  j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) @rcommand $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) @roption $right-hand-keys)
  l (tap-hold-release-keys $tap-time $hold-time (multi l @tap) @rcontrol $right-hand-keys)
  ; (tap-hold-release-keys $tap-time $hold-time (multi ; @tap) @rshift $right-hand-keys)

  ;; f-nav layer vim motions (basic arrow movements for F-hold/spacebar-hold)
  fnav_h left        ;; left arrow
  fnav_j down        ;; down arrow
  fnav_k up          ;; up arrow
  fnav_l right       ;; right arrow
  fnav_w A-right     ;; word right
  fnav_b A-left      ;; word left
  fnav_u C-A-S-M-u   ;; HomeRow App trigger
  
  ;; navfast layer aliases (big movements for D+F chord)
  fast_h M-left      ;; line start
  fast_j pgdn        ;; page down
  fast_k pgup        ;; page up
  fast_l M-right     ;; line end
  fast_w A-right     ;; word right
  fast_b A-left      ;; word left
  fast_u C-A-S-M-u   ;; HomeRow App trigger
)

